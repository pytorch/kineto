name: LIBKINETOCI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Get env vars
      run: |
        echo GITHUB_WORKFLOW   = $GITHUB_WORKFLOW
        echo HOME              = $HOME
        echo GITHUB_ACTION     = $GITHUB_ACTION
        echo GITHUB_ACTIONS    = $GITHUB_ACTIONS
        echo GITHUB_REPOSITORY = $GITHUB_REPOSITORY
        echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME
        echo GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH
        echo GITHUB_WORKSPACE  = $GITHUB_WORKSPACE
        echo GITHUB_SHA        = $GITHUB_SHA
        echo GITHUB_REF        = $GITHUB_REF
        c++ --verbose

    # TODO: Figure out how to install cupti headers T84637671
    - name: Build static lib
      run: |
        set -e
        mkdir build_static
        cd build_static
        cmake  -DKINETO_BUILD_TESTS=OFF -DKINETO_LIBRARY_TYPE=static ../libkineto/
        make -j

    - name: Build shared lib
      run: |
        set -e
        mkdir build_shared
        cd build_shared
        cmake  -DKINETO_BUILD_TESTS=OFF -DKINETO_LIBRARY_TYPE=shared ../libkineto/
        make -j
